---
title: 'HDX data Map'
subtitle: 'Welcome to #30DayMapChallenge 2024 Day 8'
date: '2024-11-08'
image: 'day8_hdx.png'
image-alt: 'day8_hdx'
description: 'HDX data Map'
output: html_document
execute: 
   eval: false
---

![HDX data Map](day8_hdx.png)
Load the required libraries and data
```{r}
# Install the hdxr package from GitHub
# remotes::install_gitlab("dickoa/rhdx")
```


Set the HDX site to "prod" and check the configuration settings.
```{r}
library(tidyverse)
library(rhdx)
set_rhdx_config(hdx_site = "prod")
get_rhdx_config()
```

Search for Ukraine data on HDX and list the datasets.
```{r}
dat <- search_datasets("ukraine")
```

Select the second dataset and display the metadata: ukraine-border-crossings
```{r}
border_crossing <- dat[2]
border_crossing
```

Display the resources available in the dataset.
```{r}
UKR_data <- border_crossing %>%
  nth(1) %>%
  get_resource(1) %>%
  read_resource() 

UKR_data %>% head() %>% glimpse()
```

Search for Ukraine administrative boundaries data on HDX.
```{r}
data2 <- search_datasets("Ukraine administrative boundaries")
```

And select the first dataset and display the metadata: kontur-boundaries-ukraine
```{r}
boundaries <- search_datasets("kontur-boundaries-ukraine")
kontur_boundaries_ukraine <- boundaries[1]
kontur_boundaries_ukraine
```

```{r}
resource <- kontur_boundaries_ukraine %>%
  nth(1) %>%
  get_resource(2)

resource
```

```{r}
resource$get_format()
```


```{r}
file_path <- resource$download()
file_path
```


```{r}
file.info(file_path)$size
```
```{r}
decompressed_file <- sub("\\.gz$", "", file_path) 
decompressed_file
```

Unzip the file
```{r}
library(R.utils)
gunzip(file_path, destname = decompressed_file, overwrite = TRUE)
```

Read the shapefile
```{r}
library(sf)
ukraine_boundaries <- st_read(decompressed_file)
```
```{r}
ukraine_boundaries
```


```{r}
ggplot(ukraine_boundaries) +
  geom_sf() +
  geom_sf(data = UKR_data, color="red", size=2) +
  ggthemes::theme_map() +
  labs(title = "Ukraine Border Crossings",
       subtitle = "Data from HDX",
       caption = "Source: HDX | #30DayMapChallenge 2024 Day8 |Created by @fgazzelloni",
       fill = "Population") 
```



```{r}
ggplot(ukraine_boundaries) +
  geom_sf(aes(fill=population)) +
  geom_sf(data = UKR_data, color="red", size=2) +
  scale_fill_gradient(low = "navy", high = "gold",) +
  ggthemes::theme_map() +
  labs(title = "Ukraine Border Crossings",
       subtitle = "Data from HDX",
       caption = "Source: HDX | #30DayMapChallenge 2024 Day8 |Created by @fgazzelloni",
       fill = "Population") 
```

Save the plot as a PNG file

```{r}
ggsave("day8_hdx.png", 
       bg = "transparent",
       width = 8, height = 6, 
       dpi = 300) 
```

